import {INs, Log} from '/resources/helpers';

export async function main(ns: INs) {
    // noinspection DuplicatedCode
    const log = new Log(ns);
    
    const timestampStart: number = Date.now();
    
    const target: string = ns.args[0];
    const threadCount: number = ns.args[1];
    const delay: number = ns.args[2]; //ms
    const blockId: number = ns.args[3];
    const stepId: number = ns.args[4];
    const marketImpact: boolean = ns.args[5];
    
    const operationId: string = `${blockId}-${stepId}`;
    
    log.info(`${target} - ${operationId} - ${threadCount} Weaken start in ${log.formatDuration(delay)}`);
    await ns.sleep(delay);
    
    log.info(`${target} - ${operationId} - ${threadCount} Weaken start now`);
    const reducedSecurity = await weaken(ns, target, threadCount, marketImpact);
    
    const timestampStop: number = Date.now();
    const hackDuration: number = timestampStop - timestampStart;
    log.info(`${target} - ${operationId} - Weaken stop - Duration ${hackDuration} - Security: -${reducedSecurity}`);
}

async function weaken(ns: INs, target: string, threads: number = 1, stock: boolean = false): Promise<number> {
    console.debug(`${target}`);
    return await ns.weaken(target, {threads: threads, stock: stock});
}
